{"version":3,"file":"Explorer.js","names":["Explorer","ExplorerBase","constructor","options","search","searchFrom","process","cwd","config","metaConfigFilePath","_loadFile","isEmpty","searchFromDirectory","getDirectory","dir","absoluteDir","path","resolve","run","result","searchDirectory","nextDir","nextDirectoryToSearch","transform","searchCache","cacheWrapper","place","searchPlaces","placeResult","loadSearchPlace","shouldSearchStopWithResult","filepath","join","fileContents","readFile","createCosmiconfigResult","loadFileContent","content","trim","undefined","loader","getLoaderEntryForFile","e","forceProp","fileContent","loadedContentToCosmiconfigResult","load","validateFilePath","absoluteFilePath","runLoad","throwNotFound","loadCache"],"sources":["../src/Explorer.ts"],"sourcesContent":["import path from 'path';\nimport { cacheWrapper } from './cacheWrapper';\nimport { ExplorerBase } from './ExplorerBase';\nimport { getDirectory } from './getDirectory';\nimport { readFile } from './readFile';\nimport { CosmiconfigResult, ExplorerOptions, LoadedFileContent } from './types';\n\nclass Explorer extends ExplorerBase<ExplorerOptions> {\n  public constructor(options: ExplorerOptions) {\n    super(options);\n  }\n\n  public async search(\n    searchFrom: string = process.cwd(),\n  ): Promise<CosmiconfigResult> {\n    if (this.config.metaConfigFilePath) {\n      const config = await this._loadFile(this.config.metaConfigFilePath, true);\n      if (config && !config.isEmpty) {\n        return config;\n      }